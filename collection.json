{
	"info": {
		"_postman_id": "f921345d-d24b-4c29-b6e1-156788267c29",
		"name": "Groupe 5 ( Nous ) : Projet 2 - API Google Book",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "LIST books",
			"item": [
				{
					"name": "Cas passants",
					"item": [
						{
							"name": "Recherche par mot-clé",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json()\r",
											"\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Recupérer 5 items\", () => {\r",
											"    pm.expect(response.items.length).to.be.eq(5)\r",
											"})\r",
											"\r",
											"let idNumber = pm.collectionVariables.set(\"bookId\", response.items[0].id)\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{LISTbooks}}harry potter&maxResults=5",
									"host": [
										"{{LISTbooks}}harry potter&maxResults=5"
									]
								},
								"description": "recherche dans \"volumes\": q\n\n**Etant donné** un utilisateur qui veut rechercher un livre dont la fiche contient un mot clé\n\n**et** qui veut seulement obtenir un résultat\n\n**Lorsqu'il** saisit le mot clé dans le moteur de recherche\n\n**Alors** il devrait recevoir la liste de toutes les infos des livres contenant ce mot clé dans leur fiche"
							},
							"response": []
						},
						{
							"name": "Recherche par titre",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"const response = pm.response.json()\r",
											"\r",
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Recupérer un nombre d'item inférieur à 40 items\", () => {\r",
											"    pm.expect(response.items.length).to.be.lt(41)\r",
											"})\r",
											"// //On crée une boucle\r",
											"// pm.test(\"Les titres ont bien A l'école des sorciers dans leur fiche\" ,() =>{\r",
											"\r",
											"//         for (let i = 0; i < response.items.length; i++) {\r",
											"//          pm.expect(response.items.includes(\"A l'école des sorciers\")).to.be.eq(true)\r",
											"//     //  console.log(response.items.includes(\"A l'école des sorciers\"))\r",
											"//      } \r",
											"// })\r",
											"\r",
											"\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{LISTbooks}}intitle:\"a l'ecole des sorciers\"&maxResults=1",
									"host": [
										"{{LISTbooks}}intitle"
									],
									"port": "\"a l'ecole des sorciers\"&maxResults=1"
								},
								"description": "#### Recherche dans le titre  \n\n**Etant donné** un utilisateur qui veut rechercher un titre de livre contenant un mot clé  \n\n**Lorsqu'il** saisit le mot clé dans le moteur de recherche  \n\n**Alors** il devrait recevoir la liste de tous les livres contenant le mot clé recherché"
							},
							"response": []
						}
					]
				},
				{
					"name": "Cas non-passants",
					"item": []
				}
			]
		},
		{
			"name": "GET book",
			"item": [
				{
					"name": "Recherche par id (récup sur requête par mot-clés)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Recupérer 40 items\", () => {\r",
									"    pm.expect(response.items.length).to.be.eq(1)\r",
									"})\r",
									"\r",
									"let idNumber = pm.collectionVariables.set(\"bookId\", response.items[0].id)\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{LISTbooks}}{{bookId}}",
							"host": [
								"{{LISTbooks}}{{bookId}}"
							]
						},
						"description": "recherche dans \"volumes\": q\n\n**Etant donné** un utilisateur qui veut rechercher un livre dont la fiche contient un mot clé\n\n**et** qui veut seulement obtenir un résultat\n\n**Lorsqu'il** saisit le mot clé dans le moteur de recherche\n\n**Alors** il devrait recevoir la liste de toutes les infos des livres contenant ce mot clé dans leur fiche"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "LISTbooks",
			"value": "https://www.googleapis.com/books/v1/volumes/?q=",
			"type": "string"
		},
		{
			"key": "GET book",
			"value": "",
			"type": "string",
			"disabled": true
		},
		{
			"key": "bookId",
			"value": ""
		}
	]
}
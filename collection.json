{
	"info": {
		"_postman_id": "6c012228-7029-4395-aaf6-56f125b03b41",
		"name": "Projet API GitHub V3 Copy",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Cas passant",
			"item": [
				{
					"name": "test existence liste repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"//La reponse est bien de type tableau, et ne contient rien puisque nous n'avons pas créer de repos pour le moment\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Response is an array\", function(){\r",
									"    pm.expect(responseJson).to.be.an(\"array\").to.not.be.empty\r",
									"})\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/users/{{owner}}/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users",
								"{{owner}}",
								"repos"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut consulter la liste de ses repos github\n\n**Lorsque** : il demande la liste de ses repos\n\n**Alors** il devrait recevoir un tableau avec la liste de ses repos\n\n**Et** un code status 200"
					},
					"response": []
				},
				{
					"name": "creation repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"  const response = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"\r",
									"const schema={\r",
									"    \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"node_id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"full_name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"private\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"owner\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"login\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"id\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"avatar_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"gravatar_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"followers_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"following_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"gists_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"starred_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"subscriptions_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"organizations_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"repos_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"received_events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"type\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"site_admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"login\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"avatar_url\",\r",
									"        \"gravatar_id\",\r",
									"        \"url\",\r",
									"        \"html_url\",\r",
									"        \"followers_url\",\r",
									"        \"following_url\",\r",
									"        \"gists_url\",\r",
									"        \"starred_url\",\r",
									"        \"subscriptions_url\",\r",
									"        \"organizations_url\",\r",
									"        \"repos_url\",\r",
									"        \"events_url\",\r",
									"        \"received_events_url\",\r",
									"        \"type\",\r",
									"        \"site_admin\"\r",
									"      ]\r",
									"    },\r",
									"    \"html_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"fork\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"forks_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"keys_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"collaborators_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"teams_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"hooks_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issue_events_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"events_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"assignees_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"branches_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"tags_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"blobs_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_tags_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_refs_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"trees_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"statuses_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"languages_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"stargazers_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"contributors_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"subscribers_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"subscription_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"commits_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_commits_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"comments_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issue_comment_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"contents_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"compare_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"merges_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"archive_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"downloads_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issues_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"pulls_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"milestones_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"notifications_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"labels_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"releases_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"deployments_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"updated_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"pushed_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ssh_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"clone_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"svn_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"homepage\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"size\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"stargazers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"has_issues\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_projects\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_downloads\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_wiki\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_pages\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"forks_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"mirror_url\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"archived\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"disabled\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"open_issues_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"license\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"allow_forking\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"is_template\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"topics\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"visibility\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"forks\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"open_issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"default_branch\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"permissions\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"maintain\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"push\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"triage\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"pull\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"admin\",\r",
									"        \"maintain\",\r",
									"        \"push\",\r",
									"        \"triage\",\r",
									"        \"pull\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_squash_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_merge_commit\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_rebase_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_auto_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"delete_branch_on_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_update_branch\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"network_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"subscribers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"node_id\",\r",
									"    \"name\",\r",
									"    \"full_name\",\r",
									"    \"private\",\r",
									"    \"owner\",\r",
									"    \"html_url\",\r",
									"    \"description\",\r",
									"    \"fork\",\r",
									"    \"url\",\r",
									"    \"forks_url\",\r",
									"    \"keys_url\",\r",
									"    \"collaborators_url\",\r",
									"    \"teams_url\",\r",
									"    \"hooks_url\",\r",
									"    \"issue_events_url\",\r",
									"    \"events_url\",\r",
									"    \"assignees_url\",\r",
									"    \"branches_url\",\r",
									"    \"tags_url\",\r",
									"    \"blobs_url\",\r",
									"    \"git_tags_url\",\r",
									"    \"git_refs_url\",\r",
									"    \"trees_url\",\r",
									"    \"statuses_url\",\r",
									"    \"languages_url\",\r",
									"    \"stargazers_url\",\r",
									"    \"contributors_url\",\r",
									"    \"subscribers_url\",\r",
									"    \"subscription_url\",\r",
									"    \"commits_url\",\r",
									"    \"git_commits_url\",\r",
									"    \"comments_url\",\r",
									"    \"issue_comment_url\",\r",
									"    \"contents_url\",\r",
									"    \"compare_url\",\r",
									"    \"merges_url\",\r",
									"    \"archive_url\",\r",
									"    \"downloads_url\",\r",
									"    \"issues_url\",\r",
									"    \"pulls_url\",\r",
									"    \"milestones_url\",\r",
									"    \"notifications_url\",\r",
									"    \"labels_url\",\r",
									"    \"releases_url\",\r",
									"    \"deployments_url\",\r",
									"    \"created_at\",\r",
									"    \"updated_at\",\r",
									"    \"pushed_at\",\r",
									"    \"git_url\",\r",
									"    \"ssh_url\",\r",
									"    \"clone_url\",\r",
									"    \"svn_url\",\r",
									"    \"homepage\",\r",
									"    \"size\",\r",
									"    \"stargazers_count\",\r",
									"    \"watchers_count\",\r",
									"    \"language\",\r",
									"    \"has_issues\",\r",
									"    \"has_projects\",\r",
									"    \"has_downloads\",\r",
									"    \"has_wiki\",\r",
									"    \"has_pages\",\r",
									"    \"forks_count\",\r",
									"    \"mirror_url\",\r",
									"    \"archived\",\r",
									"    \"disabled\",\r",
									"    \"open_issues_count\",\r",
									"    \"license\",\r",
									"    \"allow_forking\",\r",
									"    \"is_template\",\r",
									"    \"topics\",\r",
									"    \"visibility\",\r",
									"    \"forks\",\r",
									"    \"open_issues\",\r",
									"    \"watchers\",\r",
									"    \"default_branch\",\r",
									"    \"permissions\",\r",
									"    \"allow_squash_merge\",\r",
									"    \"allow_merge_commit\",\r",
									"    \"allow_rebase_merge\",\r",
									"    \"allow_auto_merge\",\r",
									"    \"delete_branch_on_merge\",\r",
									"    \"allow_update_branch\",\r",
									"    \"network_count\",\r",
									"    \"subscribers_count\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"schéma a valider\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									"\r",
									"pm.test(\"Name ok\", () => {\r",
									" pm.expect(response.name).to.equal(pm.collectionVariables.get(\"projectName\"))\r",
									"});\r",
									"\r",
									"pm.test(\"Description ok\" , () => {\r",
									"   pm.expect(response.description).to.equal(pm.collectionVariables.get(\"description\"))\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{projectName}}\",\r\n    \"description\": \"{{description}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"repos"
							]
						},
						"description": "***Etant donné*** : un utilisateur voulant créer un nouveau repos\n\n***Lorsque*** : ii envoie une requête qui contient un \"name\" et une \"description\"\n\n***Alors*** : la requête renvoi un code 201\n\n***and :*** Un schéma json valide avec un nom\n\n***and*** : une description similaire a la requête"
					},
					"response": []
				},
				{
					"name": "update repos avec nouvelle description",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"const response = pm.response.json()\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 1000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"});\r",
									"\r",
									"\r",
									"const schema={\r",
									" \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"node_id\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"full_name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"private\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"owner\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"login\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"id\": {\r",
									"          \"type\": \"integer\"\r",
									"        },\r",
									"        \"node_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"avatar_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"gravatar_id\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"html_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"followers_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"following_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"gists_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"starred_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"subscriptions_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"organizations_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"repos_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"received_events_url\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"type\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"site_admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"login\",\r",
									"        \"id\",\r",
									"        \"node_id\",\r",
									"        \"avatar_url\",\r",
									"        \"gravatar_id\",\r",
									"        \"url\",\r",
									"        \"html_url\",\r",
									"        \"followers_url\",\r",
									"        \"following_url\",\r",
									"        \"gists_url\",\r",
									"        \"starred_url\",\r",
									"        \"subscriptions_url\",\r",
									"        \"organizations_url\",\r",
									"        \"repos_url\",\r",
									"        \"events_url\",\r",
									"        \"received_events_url\",\r",
									"        \"type\",\r",
									"        \"site_admin\"\r",
									"      ]\r",
									"    },\r",
									"    \"html_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"description\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"fork\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"forks_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"keys_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"collaborators_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"teams_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"hooks_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issue_events_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"events_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"assignees_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"branches_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"tags_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"blobs_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_tags_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_refs_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"trees_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"statuses_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"languages_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"stargazers_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"contributors_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"subscribers_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"subscription_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"commits_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_commits_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"comments_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issue_comment_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"contents_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"compare_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"merges_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"archive_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"downloads_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"issues_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"pulls_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"milestones_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"notifications_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"labels_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"releases_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"deployments_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"updated_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"pushed_at\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"git_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"ssh_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"clone_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"svn_url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"homepage\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"size\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"stargazers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"language\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"has_issues\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_projects\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_downloads\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_wiki\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"has_pages\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"forks_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"mirror_url\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"archived\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"disabled\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"open_issues_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"license\": {\r",
									"      \"type\": \"null\"\r",
									"    },\r",
									"    \"allow_forking\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"is_template\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"topics\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": {}\r",
									"    },\r",
									"    \"visibility\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"forks\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"open_issues\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"watchers\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"default_branch\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"permissions\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"admin\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"maintain\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"push\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"triage\": {\r",
									"          \"type\": \"boolean\"\r",
									"        },\r",
									"        \"pull\": {\r",
									"          \"type\": \"boolean\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"admin\",\r",
									"        \"maintain\",\r",
									"        \"push\",\r",
									"        \"triage\",\r",
									"        \"pull\"\r",
									"      ]\r",
									"    },\r",
									"    \"allow_squash_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_merge_commit\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_rebase_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_auto_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"delete_branch_on_merge\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"allow_update_branch\": {\r",
									"      \"type\": \"boolean\"\r",
									"    },\r",
									"    \"network_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"subscribers_count\": {\r",
									"      \"type\": \"integer\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"node_id\",\r",
									"    \"name\",\r",
									"    \"full_name\",\r",
									"    \"private\",\r",
									"    \"owner\",\r",
									"    \"html_url\",\r",
									"    \"description\",\r",
									"    \"fork\",\r",
									"    \"url\",\r",
									"    \"forks_url\",\r",
									"    \"keys_url\",\r",
									"    \"collaborators_url\",\r",
									"    \"teams_url\",\r",
									"    \"hooks_url\",\r",
									"    \"issue_events_url\",\r",
									"    \"events_url\",\r",
									"    \"assignees_url\",\r",
									"    \"branches_url\",\r",
									"    \"tags_url\",\r",
									"    \"blobs_url\",\r",
									"    \"git_tags_url\",\r",
									"    \"git_refs_url\",\r",
									"    \"trees_url\",\r",
									"    \"statuses_url\",\r",
									"    \"languages_url\",\r",
									"    \"stargazers_url\",\r",
									"    \"contributors_url\",\r",
									"    \"subscribers_url\",\r",
									"    \"subscription_url\",\r",
									"    \"commits_url\",\r",
									"    \"git_commits_url\",\r",
									"    \"comments_url\",\r",
									"    \"issue_comment_url\",\r",
									"    \"contents_url\",\r",
									"    \"compare_url\",\r",
									"    \"merges_url\",\r",
									"    \"archive_url\",\r",
									"    \"downloads_url\",\r",
									"    \"issues_url\",\r",
									"    \"pulls_url\",\r",
									"    \"milestones_url\",\r",
									"    \"notifications_url\",\r",
									"    \"labels_url\",\r",
									"    \"releases_url\",\r",
									"    \"deployments_url\",\r",
									"    \"created_at\",\r",
									"    \"updated_at\",\r",
									"    \"pushed_at\",\r",
									"    \"git_url\",\r",
									"    \"ssh_url\",\r",
									"    \"clone_url\",\r",
									"    \"svn_url\",\r",
									"    \"homepage\",\r",
									"    \"size\",\r",
									"    \"stargazers_count\",\r",
									"    \"watchers_count\",\r",
									"    \"language\",\r",
									"    \"has_issues\",\r",
									"    \"has_projects\",\r",
									"    \"has_downloads\",\r",
									"    \"has_wiki\",\r",
									"    \"has_pages\",\r",
									"    \"forks_count\",\r",
									"    \"mirror_url\",\r",
									"    \"archived\",\r",
									"    \"disabled\",\r",
									"    \"open_issues_count\",\r",
									"    \"license\",\r",
									"    \"allow_forking\",\r",
									"    \"is_template\",\r",
									"    \"topics\",\r",
									"    \"visibility\",\r",
									"    \"forks\",\r",
									"    \"open_issues\",\r",
									"    \"watchers\",\r",
									"    \"default_branch\",\r",
									"    \"permissions\",\r",
									"    \"allow_squash_merge\",\r",
									"    \"allow_merge_commit\",\r",
									"    \"allow_rebase_merge\",\r",
									"    \"allow_auto_merge\",\r",
									"    \"delete_branch_on_merge\",\r",
									"    \"allow_update_branch\",\r",
									"    \"network_count\",\r",
									"    \"subscribers_count\"\r",
									"  ]\r",
									"}\r",
									"pm.test(\"schéma a valider\", () => {\r",
									"    pm.response.to.have.jsonSchema(schema)\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Nouvelle description ok\" , () => {\r",
									"   pm.expect(response.description).to.equal(pm.collectionVariables.get(\"newDescription\"))\r",
									"});\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{projectName}}\",\r\n    \"description\": \"{{newDescription}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/repos/{{owner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{owner}}",
								"{{projectName}}"
							]
						},
						"description": "**Etant donné** : un utilisateur souhaitant mettre à jour la description de son repos précédemment créé\n\n**Lorsque : il envoie la requête**\n\n**Alors** : le statu de la requête renvoi un code 200,\n\n**and** : la réponse de la requête ne dépasse pas 1000ms\n\n**and** : Un schéma json valide\n\n**and** : la description est bien mise à jour, et correspond a la variable \"newDescription\" envoyer dans la requête"
					},
					"response": []
				},
				{
					"name": "Suppression du repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 204 dossier détruit\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"// const retour = pm.response.json()\r",
									"\r",
									"// pm.test(\"verification qu'on recupere bien un tableau vide\", () => {\r",
									"//   pm.expect(retour).to.be.null\r",
									"// })\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/repos/{{owner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{owner}}",
								"{{projectName}}"
							]
						},
						"description": "**Etant donné**: un utilisateur qui veut supprimer un repos\n\n**Lorsqu'il:** envoie la commande delete repos\n\n**Alors** : le repos devrait être supprimé et il devrait recevoir un status 204"
					},
					"response": []
				},
				{
					"name": "get repos inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 non trouvé\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    console.log(pm.response.body)\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"pm.test(\"Not recovering suppressed repos\", () =>{\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).not.eq(pm.collectionVariables.get(\"projectName\"))\r",
									"})\r",
									"\r",
									"//{{URL}}/users/{{owner}}/repos"
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}//repos/{{owner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"",
								"repos",
								"{{owner}}",
								"{{projectName}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut accéder à un repos inexistant\n\n**Lorsque**: il fait la requête pour consulter le repos inexistant\n\n**Alors** il devrait recevoir le message dossier inexistant status 404"
					},
					"response": []
				},
				{
					"name": "get repos inexistant avec includes",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 200  trouvé\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    console.log(pm.response.body)\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"pm.test(\"Not recovering suppressed repos\", () =>{\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.includes(pm.collectionVariables.get(\"projectName\"))).to.be.eq(false)\r",
									"})\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/users/{{owner}}/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users",
								"{{owner}}",
								"repos"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut accéder à un repos inexistant\n\n**Lorsque**: il fait la requête pour consulter ses repos existants\n\n**Alors** il devrait recevoir le status 200"
					},
					"response": []
				}
			]
		},
		{
			"name": "Cas Non Passant",
			"item": [
				{
					"name": "test existence liste repos inexistante",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"//La reponse est bien de type tableau, et ne contient rien puisque nous n'avons pas créer de repos pour le moment\r",
									"const responseJson = pm.response.json();\r",
									"pm.test(\"Response object contains not found value in message property\", function(){\r",
									"    pm.expect(responseJson.message).to.be.eq(\"Not Found\")\r",
									"})\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/users/{{notExistingOwner}}/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"users",
								"{{notExistingOwner}}",
								"repos"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut consulter ses repos\n\n**Lorsqu**'il envoie sa requête avec un mauvais nom d'utilisateur\n\n**Alors** il reçoit un status erreur 404\n\n**Et** il reçoit un message Not Found"
					},
					"response": []
				},
				{
					"name": "Création d'un repos: requète pour préparer le test qui suivent",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"//   const response = pm.response.json()\r",
									"\r",
									"// pm.test(\"Status code is 201\", function () {\r",
									"//     pm.response.to.have.status(201);\r",
									"// });\r",
									"\r",
									"\r",
									"// const schema={\r",
									"//     \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"id\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"node_id\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"full_name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"private\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"owner\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"login\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"id\": {\r",
									"//           \"type\": \"integer\"\r",
									"//         },\r",
									"//         \"node_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"avatar_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gravatar_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"html_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"followers_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"following_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gists_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"starred_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"subscriptions_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"organizations_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"repos_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"received_events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"type\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"site_admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"login\",\r",
									"//         \"id\",\r",
									"//         \"node_id\",\r",
									"//         \"avatar_url\",\r",
									"//         \"gravatar_id\",\r",
									"//         \"url\",\r",
									"//         \"html_url\",\r",
									"//         \"followers_url\",\r",
									"//         \"following_url\",\r",
									"//         \"gists_url\",\r",
									"//         \"starred_url\",\r",
									"//         \"subscriptions_url\",\r",
									"//         \"organizations_url\",\r",
									"//         \"repos_url\",\r",
									"//         \"events_url\",\r",
									"//         \"received_events_url\",\r",
									"//         \"type\",\r",
									"//         \"site_admin\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"html_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"description\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"fork\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"keys_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"collaborators_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"teams_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"hooks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"assignees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"branches_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"blobs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_refs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"trees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"statuses_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"languages_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"stargazers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contributors_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscribers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscription_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"comments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_comment_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contents_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"compare_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"merges_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"archive_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"downloads_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issues_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pulls_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"milestones_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"notifications_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"labels_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"releases_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"deployments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"created_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"updated_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pushed_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"ssh_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"clone_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"svn_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"homepage\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"size\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"stargazers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"language\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"has_issues\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_projects\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_downloads\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_wiki\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_pages\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"forks_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"mirror_url\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"archived\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"disabled\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"open_issues_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"license\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"allow_forking\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"is_template\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"topics\": {\r",
									"//       \"type\": \"array\",\r",
									"//       \"items\": {}\r",
									"//     },\r",
									"//     \"visibility\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"open_issues\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"default_branch\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"permissions\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"maintain\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"push\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"triage\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"pull\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"admin\",\r",
									"//         \"maintain\",\r",
									"//         \"push\",\r",
									"//         \"triage\",\r",
									"//         \"pull\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"allow_squash_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_merge_commit\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_rebase_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_auto_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"delete_branch_on_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_update_branch\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"network_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"subscribers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"id\",\r",
									"//     \"node_id\",\r",
									"//     \"name\",\r",
									"//     \"full_name\",\r",
									"//     \"private\",\r",
									"//     \"owner\",\r",
									"//     \"html_url\",\r",
									"//     \"description\",\r",
									"//     \"fork\",\r",
									"//     \"url\",\r",
									"//     \"forks_url\",\r",
									"//     \"keys_url\",\r",
									"//     \"collaborators_url\",\r",
									"//     \"teams_url\",\r",
									"//     \"hooks_url\",\r",
									"//     \"issue_events_url\",\r",
									"//     \"events_url\",\r",
									"//     \"assignees_url\",\r",
									"//     \"branches_url\",\r",
									"//     \"tags_url\",\r",
									"//     \"blobs_url\",\r",
									"//     \"git_tags_url\",\r",
									"//     \"git_refs_url\",\r",
									"//     \"trees_url\",\r",
									"//     \"statuses_url\",\r",
									"//     \"languages_url\",\r",
									"//     \"stargazers_url\",\r",
									"//     \"contributors_url\",\r",
									"//     \"subscribers_url\",\r",
									"//     \"subscription_url\",\r",
									"//     \"commits_url\",\r",
									"//     \"git_commits_url\",\r",
									"//     \"comments_url\",\r",
									"//     \"issue_comment_url\",\r",
									"//     \"contents_url\",\r",
									"//     \"compare_url\",\r",
									"//     \"merges_url\",\r",
									"//     \"archive_url\",\r",
									"//     \"downloads_url\",\r",
									"//     \"issues_url\",\r",
									"//     \"pulls_url\",\r",
									"//     \"milestones_url\",\r",
									"//     \"notifications_url\",\r",
									"//     \"labels_url\",\r",
									"//     \"releases_url\",\r",
									"//     \"deployments_url\",\r",
									"//     \"created_at\",\r",
									"//     \"updated_at\",\r",
									"//     \"pushed_at\",\r",
									"//     \"git_url\",\r",
									"//     \"ssh_url\",\r",
									"//     \"clone_url\",\r",
									"//     \"svn_url\",\r",
									"//     \"homepage\",\r",
									"//     \"size\",\r",
									"//     \"stargazers_count\",\r",
									"//     \"watchers_count\",\r",
									"//     \"language\",\r",
									"//     \"has_issues\",\r",
									"//     \"has_projects\",\r",
									"//     \"has_downloads\",\r",
									"//     \"has_wiki\",\r",
									"//     \"has_pages\",\r",
									"//     \"forks_count\",\r",
									"//     \"mirror_url\",\r",
									"//     \"archived\",\r",
									"//     \"disabled\",\r",
									"//     \"open_issues_count\",\r",
									"//     \"license\",\r",
									"//     \"allow_forking\",\r",
									"//     \"is_template\",\r",
									"//     \"topics\",\r",
									"//     \"visibility\",\r",
									"//     \"forks\",\r",
									"//     \"open_issues\",\r",
									"//     \"watchers\",\r",
									"//     \"default_branch\",\r",
									"//     \"permissions\",\r",
									"//     \"allow_squash_merge\",\r",
									"//     \"allow_merge_commit\",\r",
									"//     \"allow_rebase_merge\",\r",
									"//     \"allow_auto_merge\",\r",
									"//     \"delete_branch_on_merge\",\r",
									"//     \"allow_update_branch\",\r",
									"//     \"network_count\",\r",
									"//     \"subscribers_count\"\r",
									"//   ]\r",
									"// }\r",
									"// pm.test(\"schéma a valider\", () => {\r",
									"//     pm.response.to.have.jsonSchema(schema)\r",
									"// });\r",
									"\r",
									"// pm.test(\"Name ok\", () => {\r",
									"//  pm.expect(response.name).to.equal(pm.collectionVariables.get(\"projectName\"))\r",
									"// });\r",
									"\r",
									"// pm.test(\"Description ok\" , () => {\r",
									"//    pm.expect(response.description).to.equal(pm.collectionVariables.get(\"description\"))\r",
									"// });"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{projectName}}\",\r\n    \"description\": \"{{description}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"repos"
							]
						},
						"description": "Requete qui sert à créer un repos pour tester la requête suivante pour savoir ce qu'il se passe si on essaye de recréer un repos avec un nom déjà utilisé"
					},
					"response": []
				},
				{
					"name": "creation repos deja existant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 422\", function () {\r",
									"    pm.response.to.have.status(422);\r",
									"});\r",
									"\r",
									"let response = pm.response.json()\r",
									"//Repository creation failed.\r",
									"pm.test(\"Création de repos échec\" , () => {\r",
									"   pm.expect(response.message).to.equal(\"Repository creation failed.\")\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 1100ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"// const schema={\r",
									"//     \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"id\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"node_id\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"full_name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"private\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"owner\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"login\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"id\": {\r",
									"//           \"type\": \"integer\"\r",
									"//         },\r",
									"//         \"node_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"avatar_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gravatar_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"html_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"followers_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"following_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gists_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"starred_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"subscriptions_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"organizations_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"repos_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"received_events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"type\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"site_admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"login\",\r",
									"//         \"id\",\r",
									"//         \"node_id\",\r",
									"//         \"avatar_url\",\r",
									"//         \"gravatar_id\",\r",
									"//         \"url\",\r",
									"//         \"html_url\",\r",
									"//         \"followers_url\",\r",
									"//         \"following_url\",\r",
									"//         \"gists_url\",\r",
									"//         \"starred_url\",\r",
									"//         \"subscriptions_url\",\r",
									"//         \"organizations_url\",\r",
									"//         \"repos_url\",\r",
									"//         \"events_url\",\r",
									"//         \"received_events_url\",\r",
									"//         \"type\",\r",
									"//         \"site_admin\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"html_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"description\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"fork\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"keys_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"collaborators_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"teams_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"hooks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"assignees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"branches_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"blobs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_refs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"trees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"statuses_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"languages_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"stargazers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contributors_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscribers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscription_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"comments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_comment_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contents_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"compare_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"merges_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"archive_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"downloads_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issues_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pulls_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"milestones_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"notifications_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"labels_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"releases_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"deployments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"created_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"updated_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pushed_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"ssh_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"clone_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"svn_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"homepage\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"size\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"stargazers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"language\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"has_issues\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_projects\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_downloads\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_wiki\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_pages\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"forks_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"mirror_url\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"archived\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"disabled\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"open_issues_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"license\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"allow_forking\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"is_template\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"topics\": {\r",
									"//       \"type\": \"array\",\r",
									"//       \"items\": {}\r",
									"//     },\r",
									"//     \"visibility\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"open_issues\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"default_branch\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"permissions\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"maintain\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"push\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"triage\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"pull\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"admin\",\r",
									"//         \"maintain\",\r",
									"//         \"push\",\r",
									"//         \"triage\",\r",
									"//         \"pull\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"allow_squash_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_merge_commit\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_rebase_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_auto_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"delete_branch_on_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_update_branch\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"network_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"subscribers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"id\",\r",
									"//     \"node_id\",\r",
									"//     \"name\",\r",
									"//     \"full_name\",\r",
									"//     \"private\",\r",
									"//     \"owner\",\r",
									"//     \"html_url\",\r",
									"//     \"description\",\r",
									"//     \"fork\",\r",
									"//     \"url\",\r",
									"//     \"forks_url\",\r",
									"//     \"keys_url\",\r",
									"//     \"collaborators_url\",\r",
									"//     \"teams_url\",\r",
									"//     \"hooks_url\",\r",
									"//     \"issue_events_url\",\r",
									"//     \"events_url\",\r",
									"//     \"assignees_url\",\r",
									"//     \"branches_url\",\r",
									"//     \"tags_url\",\r",
									"//     \"blobs_url\",\r",
									"//     \"git_tags_url\",\r",
									"//     \"git_refs_url\",\r",
									"//     \"trees_url\",\r",
									"//     \"statuses_url\",\r",
									"//     \"languages_url\",\r",
									"//     \"stargazers_url\",\r",
									"//     \"contributors_url\",\r",
									"//     \"subscribers_url\",\r",
									"//     \"subscription_url\",\r",
									"//     \"commits_url\",\r",
									"//     \"git_commits_url\",\r",
									"//     \"comments_url\",\r",
									"//     \"issue_comment_url\",\r",
									"//     \"contents_url\",\r",
									"//     \"compare_url\",\r",
									"//     \"merges_url\",\r",
									"//     \"archive_url\",\r",
									"//     \"downloads_url\",\r",
									"//     \"issues_url\",\r",
									"//     \"pulls_url\",\r",
									"//     \"milestones_url\",\r",
									"//     \"notifications_url\",\r",
									"//     \"labels_url\",\r",
									"//     \"releases_url\",\r",
									"//     \"deployments_url\",\r",
									"//     \"created_at\",\r",
									"//     \"updated_at\",\r",
									"//     \"pushed_at\",\r",
									"//     \"git_url\",\r",
									"//     \"ssh_url\",\r",
									"//     \"clone_url\",\r",
									"//     \"svn_url\",\r",
									"//     \"homepage\",\r",
									"//     \"size\",\r",
									"//     \"stargazers_count\",\r",
									"//     \"watchers_count\",\r",
									"//     \"language\",\r",
									"//     \"has_issues\",\r",
									"//     \"has_projects\",\r",
									"//     \"has_downloads\",\r",
									"//     \"has_wiki\",\r",
									"//     \"has_pages\",\r",
									"//     \"forks_count\",\r",
									"//     \"mirror_url\",\r",
									"//     \"archived\",\r",
									"//     \"disabled\",\r",
									"//     \"open_issues_count\",\r",
									"//     \"license\",\r",
									"//     \"allow_forking\",\r",
									"//     \"is_template\",\r",
									"//     \"topics\",\r",
									"//     \"visibility\",\r",
									"//     \"forks\",\r",
									"//     \"open_issues\",\r",
									"//     \"watchers\",\r",
									"//     \"default_branch\",\r",
									"//     \"permissions\",\r",
									"//     \"allow_squash_merge\",\r",
									"//     \"allow_merge_commit\",\r",
									"//     \"allow_rebase_merge\",\r",
									"//     \"allow_auto_merge\",\r",
									"//     \"delete_branch_on_merge\",\r",
									"//     \"allow_update_branch\",\r",
									"//     \"network_count\",\r",
									"//     \"subscribers_count\"\r",
									"//   ]\r",
									"// }\r",
									" \r",
									"// pm.test(\"schéma a valider\", () => {\r",
									"//     pm.response.to.have.jsonSchema(schema)\r",
									"// });"
								]
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{alreadyExistingProjectName}}\",\r\n    \"description\": \"{{description}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/user/repos",
							"host": [
								"{{URL}}"
							],
							"path": [
								"user",
								"repos"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut créer un nouveau repos\n\n**Lorsqu**'il demande la création d'un repos avec un nom déjà utilisé\n\n**Alors** il reçoit un statusd'erreur 422\n\n**Et** un message d'échecs de création de repos"
					},
					"response": []
				},
				{
					"name": "Suppression du repos créé pour tester la requête précédente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/repos/{{owner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{owner}}",
								"{{projectName}}"
							]
						},
						"description": "Suppression du repos créé pour tester la requête de création de repos avec un repos déjà existant"
					},
					"response": []
				},
				{
					"name": "update repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"let response = pm.response.json()\r",
									"//Repository creation failed.\r",
									"pm.test(\"Mise à jour d'un repos inexistant échec\" , () => {\r",
									"   pm.expect(response.message).to.equal(\"Not Found\")\r",
									"});\r",
									"// pm.test(\"Response time is less than 1000ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"// const responseJson = pm.response.json()\r",
									"\r",
									"// pm.test(\"description bien modifee\", () =>{\r",
									"//     //\r",
									"//     //pm.expect(responseJson.description).to.equal(pm.collectionVariables.get(\"newDescription\"))\r",
									"//     pm.iterationData.get(\"description\")\r",
									"//     pm.iterationData.get(\"newDescription\")\r",
									"// })\r",
									"\r",
									"// const schema={\r",
									"//  \"type\": \"object\",\r",
									"//   \"properties\": {\r",
									"//     \"id\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"node_id\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"full_name\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"private\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"owner\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"login\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"id\": {\r",
									"//           \"type\": \"integer\"\r",
									"//         },\r",
									"//         \"node_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"avatar_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gravatar_id\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"html_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"followers_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"following_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"gists_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"starred_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"subscriptions_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"organizations_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"repos_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"received_events_url\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"type\": {\r",
									"//           \"type\": \"string\"\r",
									"//         },\r",
									"//         \"site_admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"login\",\r",
									"//         \"id\",\r",
									"//         \"node_id\",\r",
									"//         \"avatar_url\",\r",
									"//         \"gravatar_id\",\r",
									"//         \"url\",\r",
									"//         \"html_url\",\r",
									"//         \"followers_url\",\r",
									"//         \"following_url\",\r",
									"//         \"gists_url\",\r",
									"//         \"starred_url\",\r",
									"//         \"subscriptions_url\",\r",
									"//         \"organizations_url\",\r",
									"//         \"repos_url\",\r",
									"//         \"events_url\",\r",
									"//         \"received_events_url\",\r",
									"//         \"type\",\r",
									"//         \"site_admin\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"html_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"description\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"fork\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"keys_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"collaborators_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"teams_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"hooks_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"events_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"assignees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"branches_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"blobs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_tags_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_refs_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"trees_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"statuses_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"languages_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"stargazers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contributors_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscribers_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"subscription_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_commits_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"comments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issue_comment_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"contents_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"compare_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"merges_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"archive_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"downloads_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"issues_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pulls_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"milestones_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"notifications_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"labels_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"releases_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"deployments_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"created_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"updated_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"pushed_at\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"git_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"ssh_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"clone_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"svn_url\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"homepage\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"size\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"stargazers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"language\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"has_issues\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_projects\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_downloads\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_wiki\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"has_pages\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"forks_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"mirror_url\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"archived\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"disabled\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"open_issues_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"license\": {\r",
									"//       \"type\": \"null\"\r",
									"//     },\r",
									"//     \"allow_forking\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"is_template\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"topics\": {\r",
									"//       \"type\": \"array\",\r",
									"//       \"items\": {}\r",
									"//     },\r",
									"//     \"visibility\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"forks\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"open_issues\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"watchers\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"default_branch\": {\r",
									"//       \"type\": \"string\"\r",
									"//     },\r",
									"//     \"permissions\": {\r",
									"//       \"type\": \"object\",\r",
									"//       \"properties\": {\r",
									"//         \"admin\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"maintain\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"push\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"triage\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         },\r",
									"//         \"pull\": {\r",
									"//           \"type\": \"boolean\"\r",
									"//         }\r",
									"//       },\r",
									"//       \"required\": [\r",
									"//         \"admin\",\r",
									"//         \"maintain\",\r",
									"//         \"push\",\r",
									"//         \"triage\",\r",
									"//         \"pull\"\r",
									"//       ]\r",
									"//     },\r",
									"//     \"allow_squash_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_merge_commit\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_rebase_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_auto_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"delete_branch_on_merge\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"allow_update_branch\": {\r",
									"//       \"type\": \"boolean\"\r",
									"//     },\r",
									"//     \"network_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     },\r",
									"//     \"subscribers_count\": {\r",
									"//       \"type\": \"integer\"\r",
									"//     }\r",
									"//   },\r",
									"//   \"required\": [\r",
									"//     \"id\",\r",
									"//     \"node_id\",\r",
									"//     \"name\",\r",
									"//     \"full_name\",\r",
									"//     \"private\",\r",
									"//     \"owner\",\r",
									"//     \"html_url\",\r",
									"//     \"description\",\r",
									"//     \"fork\",\r",
									"//     \"url\",\r",
									"//     \"forks_url\",\r",
									"//     \"keys_url\",\r",
									"//     \"collaborators_url\",\r",
									"//     \"teams_url\",\r",
									"//     \"hooks_url\",\r",
									"//     \"issue_events_url\",\r",
									"//     \"events_url\",\r",
									"//     \"assignees_url\",\r",
									"//     \"branches_url\",\r",
									"//     \"tags_url\",\r",
									"//     \"blobs_url\",\r",
									"//     \"git_tags_url\",\r",
									"//     \"git_refs_url\",\r",
									"//     \"trees_url\",\r",
									"//     \"statuses_url\",\r",
									"//     \"languages_url\",\r",
									"//     \"stargazers_url\",\r",
									"//     \"contributors_url\",\r",
									"//     \"subscribers_url\",\r",
									"//     \"subscription_url\",\r",
									"//     \"commits_url\",\r",
									"//     \"git_commits_url\",\r",
									"//     \"comments_url\",\r",
									"//     \"issue_comment_url\",\r",
									"//     \"contents_url\",\r",
									"//     \"compare_url\",\r",
									"//     \"merges_url\",\r",
									"//     \"archive_url\",\r",
									"//     \"downloads_url\",\r",
									"//     \"issues_url\",\r",
									"//     \"pulls_url\",\r",
									"//     \"milestones_url\",\r",
									"//     \"notifications_url\",\r",
									"//     \"labels_url\",\r",
									"//     \"releases_url\",\r",
									"//     \"deployments_url\",\r",
									"//     \"created_at\",\r",
									"//     \"updated_at\",\r",
									"//     \"pushed_at\",\r",
									"//     \"git_url\",\r",
									"//     \"ssh_url\",\r",
									"//     \"clone_url\",\r",
									"//     \"svn_url\",\r",
									"//     \"homepage\",\r",
									"//     \"size\",\r",
									"//     \"stargazers_count\",\r",
									"//     \"watchers_count\",\r",
									"//     \"language\",\r",
									"//     \"has_issues\",\r",
									"//     \"has_projects\",\r",
									"//     \"has_downloads\",\r",
									"//     \"has_wiki\",\r",
									"//     \"has_pages\",\r",
									"//     \"forks_count\",\r",
									"//     \"mirror_url\",\r",
									"//     \"archived\",\r",
									"//     \"disabled\",\r",
									"//     \"open_issues_count\",\r",
									"//     \"license\",\r",
									"//     \"allow_forking\",\r",
									"//     \"is_template\",\r",
									"//     \"topics\",\r",
									"//     \"visibility\",\r",
									"//     \"forks\",\r",
									"//     \"open_issues\",\r",
									"//     \"watchers\",\r",
									"//     \"default_branch\",\r",
									"//     \"permissions\",\r",
									"//     \"allow_squash_merge\",\r",
									"//     \"allow_merge_commit\",\r",
									"//     \"allow_rebase_merge\",\r",
									"//     \"allow_auto_merge\",\r",
									"//     \"delete_branch_on_merge\",\r",
									"//     \"allow_update_branch\",\r",
									"//     \"network_count\",\r",
									"//     \"subscribers_count\"\r",
									"//   ]\r",
									"// }\r",
									" \r",
									"// pm.test(\"schéma a valider\", () => {\r",
									"//     pm.response.to.have.jsonSchema(schema)\r",
									"// });\r",
									"\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{projectName}}\",\r\n    \"description\": \"{{newDescription}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/repos/{{owner}}/{{notExistingProject}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{owner}}",
								"{{notExistingProject}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut mettre à jour un repos\n\n**Lorsqu**'il met un repos qui n'existe pas en paramètre\n\n**Alors** il reçoit un status erreur 404\n\n**Et** un message repos pas trouvé"
					},
					"response": []
				},
				{
					"name": "Suppression du repos mauvais nom utilisateur",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 dossier détruit\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"let response = pm.response.json()\r",
									"//Repository creation failed.\r",
									"pm.test(\"echec suppression repos avec utilisateur non existant \" , () => {\r",
									"   pm.expect(response.message).to.equal(\"Not Found\")\r",
									"});\r",
									"\r",
									"// const retour = pm.response.json()\r",
									"\r",
									"// pm.test(\"verification qu'on recupere bien un tableau vide\", () => {\r",
									"//   pm.expect(retour).to.be.an(Array)\r",
									"// })\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/repos/{{notExistingOwner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{notExistingOwner}}",
								"{{projectName}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut supprimer un repos\n\n**Lorsqu'**il utilise un nom d'utilisateur qui n'existe pas\n\n**Alors** il reçoit un message d'erreur status404\n\n**Et** un message pas trouvé"
					},
					"response": []
				},
				{
					"name": "Suppression du repos mauvais repos",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 dossier détruit\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"let response = pm.response.json()\r",
									"//Repository creation failed.\r",
									"pm.test(\"echec suppression repos avec utilisateur non existant \" , () => {\r",
									"   pm.expect(response.message).to.equal(\"Not Found\")\r",
									"});"
								]
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/repos/{{owner}}/{{notExistingProject}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"repos",
								"{{owner}}",
								"{{notExistingProject}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut supprimer un repos qui n'existe pas\n\n**Lorsqu\"il** indique un repos inexistant\n\n**Alors** il reçoit un message status 404\n\n**Et** un message d'erreur Repos pas trouvé"
					},
					"response": []
				},
				{
					"name": "get repos inexistant",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 non trouvé\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    console.log(pm.response.body)\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"pm.test(\"repos non trouvé\", () => {\r",
									"    let answer = pm.response.json()\r",
									"    console.log(answer.message)\r",
									"    pm.expect(answer.message).to.eq(\"Not Found\")\r",
									"})\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}//repos/{{notExistingOwner}}/{{projectName}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"",
								"repos",
								"{{notExistingOwner}}",
								"{{projectName}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut récupérer un repos\n\n**Lorsqu'**il utilise un nom d'utilisateur qui n'existe pas\n\n**Alors** il reçoit un message d'erreur status404\n\n**Et** un message pas trouvé"
					},
					"response": []
				},
				{
					"name": "get repos  inexistant d'un utilisateur",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"pm.test(\"Status code is 404 non trouvé\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    console.log(pm.response.body)\r",
									"});\r",
									"\r",
									"// pm.test(\"Response time is less than 500ms\", function () {\r",
									"//     pm.expect(pm.response.responseTime).to.be.below(Number(pm.collectionVariables.get(\"timespent\")));\r",
									"// });\r",
									"\r",
									"pm.test(\"repos non trouvé\", () => {\r",
									"    let answer = pm.response.json()\r",
									"    console.log(answer.message)\r",
									"    pm.expect(answer.message).to.eq(\"Not Found\")\r",
									"})\r",
									""
								]
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}//repos/{{owner}}/{{notExistingProject}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"",
								"repos",
								"{{owner}}",
								"{{notExistingProject}}"
							]
						},
						"description": "**Etant donné** un utilisateur qui veut récupérer un repos\n\n**Lorsqu'**il utilise un nom de repos qui n'existe pas\n\n**Alors** il reçoit un message d'erreur status404\n\n**Et** un message pas trouvé"
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "URL",
			"value": "https://api.github.com",
			"type": "string"
		},
		{
			"key": "projectName",
			"value": "testProjectApi",
			"type": "string"
		},
		{
			"key": "owner",
			"value": "lesAmigos",
			"type": "string"
		},
		{
			"key": "notExistingOwner",
			"value": "les3Amigos",
			"type": "string"
		},
		{
			"key": "alreadyExistingProjectName",
			"value": "Ayla",
			"type": "string"
		},
		{
			"key": "description",
			"value": "une description pour commencer",
			"type": "string"
		},
		{
			"key": "newDescription",
			"value": "une nouvelle description",
			"type": "string"
		},
		{
			"key": "timespent",
			"value": "1500",
			"type": "string"
		},
		{
			"key": "notExistingProject",
			"value": "fauxNomDeProjet",
			"type": "string"
		}
	]
}